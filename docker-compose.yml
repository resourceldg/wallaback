version: '3'
services:
  nginx:
    container_name: nginx
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/certs:/etc/nginx/certs:ro
      - html:/usr/share/nginx/html
      - vhostd:/etc/nginx/vhost.d
    networks:
      proxy-net:
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - ./config/certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  api:
    container_name: api
    user: root
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=wardixlab.com
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=wardixlab.com
      - LETSENCRYPT_EMAIL=resourceld@gmail.com
    depends_on:
      - db
    networks:
      proxy-net:
  db:
    container_name: db
    image: postgres:12.0-alpine
    user: postgres
    volumes:
          - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    expose:
      - 5432
    networks:
      proxy-net:
    depends_on:
      - nginx

networks:
  proxy-net:
volumes:
  postgres_data:
  certs:
  vhostd:
  config:
  html:
















